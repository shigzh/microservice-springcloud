spring:
  cloud:
    config:
      name: microservice-config-product #github上的配置名称，注意没有yml后缀名
      profile: prod # 本次访问的环境配置项
      label: master # 远程库的分支名
      uri: http://127.0.0.1:5001 #Config配置中心地址，本微服务启动的时候先去访问5001配置服务器，通过它获取microservice-config-product.yml配置信息
  #应用名字(一般这个放在application.yml中，这里自己测试放在一起了，以后工作中还是分开放在aplicationl.yml中)
  application:
    name: microservice-product-config



  #application.yml是用户级的资源配置项
  #bootstrap.yml是系统级的，优先级比较高，不会被用户级的资源配置覆盖
  #Spring Cloud会创建一个‘Bootstrap Context’，作为Spring应用的‘Application Context’的父上下文，初始化的时候，‘Bootstrap Context’负责
  #从外部源加载配置属性并解析配置。这两个上下文共享一个从外部获取的‘Environment’。
  #Bootstrap属性有高优先级，默认情况下，不会被本地配置覆盖，Bootstrap Context与Application Context有着不同的约定
  #所以新增了一个bootstrap.yml文件，保证Bootstrap Context与Application Context配置的分离